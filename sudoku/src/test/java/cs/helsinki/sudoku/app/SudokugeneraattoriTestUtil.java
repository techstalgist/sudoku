
package cs.helsinki.sudoku.app;

import java.util.AbstractMap;
import java.util.ArrayList;


public class SudokugeneraattoriTestUtil {
    
    public boolean vertaaRuudukkoja(int[][] ruudukko1, int[][] ruudukko2) {
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                int arvo1 = ruudukko1[i][j];
                int arvo2 = ruudukko2[i][j];
                if (arvo1 != arvo2) {
                    return false;
                }
            }
        }
        return true;
    }
    
    public int[][] valmisPohja1() {
        return new int[][]{
                        {0,0,3,0,2,0,6,0,0},
                        {9,0,0,3,0,5,0,0,1},
                        {0,0,1,8,0,6,4,0,0},
                        {0,0,8,1,0,2,9,0,0},
                        {7,0,0,0,0,0,0,0,8},
                        {0,0,6,7,0,8,2,0,0},
                        {0,0,2,6,0,9,5,0,0},
                        {8,0,0,2,0,3,0,0,9},
                        {0,0,5,0,1,0,3,0,0}
         };
    }
    
    public int[][] valmisPohja2() {
        return new int[][] {
                        {5,0,0,4,1,0,0,0,7},
                        {0,0,7,9,0,5,6,4,8},
                        {0,4,9,6,7,0,5,0,0},
                        {6,5,0,7,4,1,0,8,9},
                        {9,0,4,8,3,6,2,7,5},
                        {7,0,3,2,5,9,4,1,6},
                        {0,7,8,5,6,4,0,9,3},
                        {4,6,1,3,9,7,8,5,2},
                        {3,9,5,1,0,0,7,6,4}
        };
    }
    
    public int[][] valmisPohja3() {
        return new int[][] {
                        {1,8,9,2,5,7,0,6,4},
                        {4,6,5,8,9,0,2,1,7},
                        {0,2,7,4,1,6,0,5,9},
                        {9,0,4,7,6,1,5,2,8},
                        {8,1,6,9,2,5,7,4,0},
                        {7,5,2,0,4,8,1,9,6},
                        {6,7,1,5,0,4,9,8,2},
                        {5,9,0,6,8,2,4,7,1},
                        {2,4,8,1,7,9,6,0,5}
        }; 
    }
    
     public int[][] valmisPohja4() {
        return new int[][] {
                        {3,2,5,4,9,6,7,0,8},
                        {1,4,6,8,7,5,3,9,2},
                        {7,8,9,1,3,2,0,5,4},
                        {4,5,7,9,1,3,2,8,6},
                        {2,9,3,6,5,8,4,7,1},
                        {6,1,8,7,2,4,9,3,5},
                        {5,3,4,2,8,7,0,0,9},
                        {8,6,1,3,4,9,5,2,7},
                        {9,7,2,5,6,1,8,4,3}
        }; 
    }
     
    public int[][] lautaJotaEiVoiTayttaaOikein() {
        return new int[][]{
                        {5,8,7,1,6,4,9,3,2},
                        {1,4,6,9,2,3,7,5,8},
                        {3,2,9,5,7,8,1,6,4},
                        
                        {9,5,2,7,3,6,4,8,1},
                        {8,6,1,2,5,9,3,7,0},
                        {7,0,3,8,4,1,2,9,6},
                        
                        {2,3,8,6,1,7,5,4,9},
                        {6,0,5,0,9,2,8,1,0},
                        {4,0,0,0,0,0,0,0,0}
         };
    }
    
    public int[][] lautaJollaEiYhtaanSopivaa() {
        return new int[][]{
                        {5,8,7,1,6,4,9,3,2},
                        {1,4,6,9,2,3,7,5,8},
                        {3,2,9,5,7,8,1,6,4},
                        
                        {9,5,2,7,3,6,4,8,1},
                        {8,6,1,2,5,9,3,7,0},
                        {7,0,3,8,4,1,2,9,6},
                        
                        {2,3,8,6,1,7,5,4,9},
                        {6,7,5,3,9,2,8,1,0},
                        {4,1,0,0,8,5,6,2,3}
         };
    }
    
    
    public int[][] valmisRatkaisu() {
        return new int[][] {
                        {7,8,3,6,1,4,9,5,2},
                        {9,1,2,8,7,5,3,4,6},
                        {4,6,5,3,9,2,8,1,7},
                        {3,5,8,7,4,6,2,9,1},
                        {2,4,7,1,3,9,5,6,8},
                        {6,9,1,2,5,8,7,3,4},
                        {8,3,6,5,2,1,4,7,9},
                        {5,2,4,9,6,7,1,8,3},
                        {1,7,9,4,8,3,6,2,5}
        };
    }
    // http://www.telegraph.co.uk/news/science/science-news/9359579/Worlds-hardest-sudoku-can-you-crack-it.html
    public int[][] vaikeaPohja() {
        return new int[][]{
                        {8,0,0,0,0,0,0,0,0},
                        {0,0,3,6,0,0,0,0,0},
                        {0,7,0,0,9,0,2,0,0},
                        {0,5,0,0,0,7,0,0,0},
                        {0,0,0,0,4,5,7,0,0},
                        {0,0,0,1,0,0,0,3,0},
                        {0,0,1,0,0,0,0,6,8},
                        {0,0,8,5,0,0,0,1,0},
                        {0,9,0,0,0,0,4,0,0}
         };
    } 
    
    
    public int[][] oikeaTulos1() {
        return new int[][]{
                        {4,8,3,9,2,1,6,5,7},
                        {9,6,7,3,4,5,8,2,1},
                        {2,5,1,8,7,6,4,9,3},
                        {5,4,8,1,3,2,9,7,6},
                        {7,2,9,5,6,4,1,3,8},
                        {1,3,6,7,9,8,2,4,5},
                        {3,7,2,6,8,9,5,1,4},
                        {8,1,4,2,5,3,7,6,9},
                        {6,9,5,4,1,7,3,8,2}
         };
    }
    
    public int[][] oikeaTulos2() {
        return new int[][] {
                        {5,2,6,4,1,8,9,3,7},
                        {1,3,7,9,2,5,6,4,8},
                        {8,4,9,6,7,3,5,2,1},
                        {6,5,2,7,4,1,3,8,9},
                        {9,1,4,8,3,6,2,7,5},
                        {7,8,3,2,5,9,4,1,6},
                        {2,7,8,5,6,4,1,9,3},
                        {4,6,1,3,9,7,8,5,2},
                        {3,9,5,1,8,2,7,6,4}
        };
    }
    
    public int[][] oikeaTulos3() {
        return new int[][] {
                        {1,8,9,2,5,7,3,6,4},
                        {4,6,5,8,9,3,2,1,7},
                        {3,2,7,4,1,6,8,5,9},
                        
                        {9,3,4,7,6,1,5,2,8},
                        {8,1,6,9,2,5,7,4,3},
                        {7,5,2,3,4,8,1,9,6},
                        
                        {6,7,1,5,3,4,9,8,2},
                        {5,9,3,6,8,2,4,7,1},
                        {2,4,8,1,7,9,6,3,5}
        }; 
    }
    
    public int[][] vaikeanPohjanRatkaisu() {
        return new int[][]{
                        {8,1,2, 7,5,3, 6,4,9},
                        {9,4,3, 6,8,2, 1,7,5},
                        {6,7,5, 4,9,1, 2,8,3},
                        
                        {1,5,4, 2,3,7, 8,9,6},
                        {3,6,9, 8,4,5, 7,2,1},
                        {2,8,7, 1,6,9, 5,3,4},
                        
                        {5,2,1, 9,7,4, 3,6,8},
                        {4,3,8, 5,2,6, 9,1,7},
                        {7,9,6, 3,1,8, 4,5,2}
         };
    }
    
    public ArrayList<AbstractMap.SimpleEntry<Integer, Integer>> ruutulista() {
        String ruutulista = "3,0\n" +
                    "6,3\n" +
                    "0,4\n" +
                    "1,2\n" +
                    "0,7\n" +
                    "6,6\n" +
                    "6,4\n" +
                    "5,1\n" +
                    "2,4\n" +
                    "0,3\n" +
                    "7,4\n" +
                    "3,8\n" +
                    "3,3\n" +
                    "5,4\n" +
                    "1,6\n" +
                    "0,2\n" +
                    "2,1\n" +
                    "8,7\n" +
                    "1,4\n" +
                    "7,1\n" +
                    "1,0\n" +
                    "1,8\n" +
                    "2,8\n" +
                    "8,2\n" +
                    "8,0\n" +
                    "5,3\n" +
                    "8,6\n" +
                    "6,5\n" +
                    "1,3\n" +
                    "2,5\n" +
                    "3,5\n" +
                    "0,6\n" +
                    "0,8\n" +
                    "6,0\n" +
                    "5,2\n" +
                    "2,0\n" +
                    "7,8\n" +
                    "4,4\n" +
                    "4,7\n" +
                    "1,1\n" +
                    "7,3\n" +
                    "6,2\n" +
                    "7,5\n" +
                    "0,5\n" +
                    "3,6\n" +
                    "8,4\n" +
                    "4,3\n" +
                    "6,1\n" +
                    "4,1\n" +
                    "7,0\n" +
                    "4,0\n" +
                    "5,8\n" +
                    "4,2\n" +
                    "8,8\n" +
                    "5,6\n" +
                    "8,5\n" +
                    "7,2\n" +
                    "2,6\n" +
                    "3,2\n" +
                    "6,8\n" +
                    "1,7\n" +
                    "7,6\n" +
                    "0,0\n" +
                    "3,1\n" +
                    "2,7\n" +
                    "0,1\n" +
                    "8,1\n" +
                    "4,6\n" +
                    "2,3\n" +
                    "7,7\n" +
                    "3,4\n" +
                    "2,2\n" +
                    "4,8\n" +
                    "4,5\n" +
                    "3,7\n" +
                    "8,3\n" +
                    "1,5\n" +
                    "5,5\n" +
                    "6,7\n" +
                    "5,7\n" +
                    "5,0";
        String[] listaArr = ruutulista.split("\n");
        ArrayList<AbstractMap.SimpleEntry<Integer, Integer>> listaOikeassaMuodossa = new ArrayList<>();
        for(String riviListalla : listaArr) {
            String rivi = riviListalla.split(",")[0];
            String sarake = riviListalla.split(",")[1];
            AbstractMap.SimpleEntry<Integer, Integer> pari = new AbstractMap.SimpleEntry<>(Integer.parseInt(rivi), Integer.parseInt(sarake));
            listaOikeassaMuodossa.add(pari);
        }
        
        return listaOikeassaMuodossa;
        
    }
}
